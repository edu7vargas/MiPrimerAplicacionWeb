@using MiPrimerAplicacionWeb.Models
@model BusCLS

@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listaTipoBus = (List<SelectListItem>)ViewBag.listaTipoBus;
    List<SelectListItem> listaMarca = (List<SelectListItem>)ViewBag.listaMarca;
    List<SelectListItem> listaModelo = (List<SelectListItem>)ViewBag.listaModelo;
    List<SelectListItem> listaSucursal = (List<SelectListItem>)ViewBag.listaSucursal;
}

<h2>Agregar Bus</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Agregar", "Bus", FormMethod.Post,new { @id= "frmAgregarBus" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>BusCLS</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.iidsucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidsucursal", listaSucursal, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidsucursal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidtipobus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidtipobus", listaTipoBus, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidtipobus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidmodelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidmodelo", listaModelo, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidmodelo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.iidmarca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iidmarca", listaMarca, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iidmarca, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.placa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
                        @if (Model != null && Model.mensajeError != null)
                        {
                            @Html.Label(Model.mensajeError, new { @class = "text-danger" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechacompra, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechacompra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechacompra, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numerofilas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numerofilas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numerofilas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numerocolumnas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numerocolumnas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numerocolumnas, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                            Guardar
                        </button>
                        <!--<input type="submit" class="btn btn-primary" value="Guardar" />-->
                        @Html.ActionLink("Regresar", "Index", "Bus", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>


<script>

    function Agregar() {
        var frmAgregarBus = document.getElementById("frmAgregarBus");
        frmAgregarBus.submit();
    }

    /*
    var frmAgregarBus = document.getElementById("frmAgregarBus");
    frmAgregarBus.onsubmit = function (e) {
        e.preventDefault();
        if (confirm("¿Deseas agregar una Marca?") == 1) {
            frmAgregarBus.submit();
        }
    }
    */

</script>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">¿Deseas agregar una Bus?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div style="padding: 1em;">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="Agregar()">Guardar</button>
            </div>
        </div>
    </div>
</div>
